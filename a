   0  *ast.File {
   1  .  Package: 2:1
   2  .  Name: *ast.Ident {
   3  .  .  NamePos: 2:9
   4  .  .  Name: "main"
   5  .  }
   6  .  Decls: []ast.Decl (len = 4) {
   7  .  .  0: *ast.FuncDecl {
   8  .  .  .  Name: *ast.Ident {
   9  .  .  .  .  NamePos: 4:6
  10  .  .  .  .  Name: "MapIntIntSequenceSlice"
  11  .  .  .  .  Obj: *ast.Object {
  12  .  .  .  .  .  Kind: func
  13  .  .  .  .  .  Name: "MapIntIntSequenceSlice"
  14  .  .  .  .  .  Decl: *(obj @ 7)
  15  .  .  .  .  }
  16  .  .  .  }
  17  .  .  .  Type: *ast.FuncType {
  18  .  .  .  .  Func: 4:1
  19  .  .  .  .  Params: *ast.FieldList {
  20  .  .  .  .  .  Opening: 4:28
  21  .  .  .  .  .  List: []*ast.Field (len = 2) {
  22  .  .  .  .  .  .  0: *ast.Field {
  23  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  24  .  .  .  .  .  .  .  .  0: *ast.Ident {
  25  .  .  .  .  .  .  .  .  .  NamePos: 4:29
  26  .  .  .  .  .  .  .  .  .  Name: "handler"
  27  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  28  .  .  .  .  .  .  .  .  .  .  Kind: var
  29  .  .  .  .  .  .  .  .  .  .  Name: "handler"
  30  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 22)
  31  .  .  .  .  .  .  .  .  .  }
  32  .  .  .  .  .  .  .  .  }
  33  .  .  .  .  .  .  .  }
  34  .  .  .  .  .  .  .  Type: *ast.ParenExpr {
  35  .  .  .  .  .  .  .  .  Lparen: 4:37
  36  .  .  .  .  .  .  .  .  X: *ast.FuncType {
  37  .  .  .  .  .  .  .  .  .  Func: 4:38
  38  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
  39  .  .  .  .  .  .  .  .  .  .  Opening: 4:42
  40  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
  41  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
  42  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  43  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 4:43
  44  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
  45  .  .  .  .  .  .  .  .  .  .  .  .  }
  46  .  .  .  .  .  .  .  .  .  .  .  }
  47  .  .  .  .  .  .  .  .  .  .  }
  48  .  .  .  .  .  .  .  .  .  .  Closing: 4:46
  49  .  .  .  .  .  .  .  .  .  }
  50  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
  51  .  .  .  .  .  .  .  .  .  .  Opening: -
  52  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
  53  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
  54  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  55  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 4:48
  56  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
  57  .  .  .  .  .  .  .  .  .  .  .  .  }
  58  .  .  .  .  .  .  .  .  .  .  .  }
  59  .  .  .  .  .  .  .  .  .  .  }
  60  .  .  .  .  .  .  .  .  .  .  Closing: -
  61  .  .  .  .  .  .  .  .  .  }
  62  .  .  .  .  .  .  .  .  }
  63  .  .  .  .  .  .  .  .  Rparen: 4:51
  64  .  .  .  .  .  .  .  }
  65  .  .  .  .  .  .  }
  66  .  .  .  .  .  .  1: *ast.Field {
  67  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  68  .  .  .  .  .  .  .  .  0: *ast.Ident {
  69  .  .  .  .  .  .  .  .  .  NamePos: 4:54
  70  .  .  .  .  .  .  .  .  .  Name: "sequence"
  71  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  72  .  .  .  .  .  .  .  .  .  .  Kind: var
  73  .  .  .  .  .  .  .  .  .  .  Name: "sequence"
  74  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 66)
  75  .  .  .  .  .  .  .  .  .  }
  76  .  .  .  .  .  .  .  .  }
  77  .  .  .  .  .  .  .  }
  78  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  79  .  .  .  .  .  .  .  .  Lbrack: 4:63
  80  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  81  .  .  .  .  .  .  .  .  .  NamePos: 4:65
  82  .  .  .  .  .  .  .  .  .  Name: "int"
  83  .  .  .  .  .  .  .  .  }
  84  .  .  .  .  .  .  .  }
  85  .  .  .  .  .  .  }
  86  .  .  .  .  .  }
  87  .  .  .  .  .  Closing: 4:68
  88  .  .  .  .  }
  89  .  .  .  .  Results: *ast.FieldList {
  90  .  .  .  .  .  Opening: -
  91  .  .  .  .  .  List: []*ast.Field (len = 1) {
  92  .  .  .  .  .  .  0: *ast.Field {
  93  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  94  .  .  .  .  .  .  .  .  Lbrack: 4:70
  95  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
  96  .  .  .  .  .  .  .  .  .  NamePos: 4:72
  97  .  .  .  .  .  .  .  .  .  Name: "int"
  98  .  .  .  .  .  .  .  .  }
  99  .  .  .  .  .  .  .  }
 100  .  .  .  .  .  .  }
 101  .  .  .  .  .  }
 102  .  .  .  .  .  Closing: -
 103  .  .  .  .  }
 104  .  .  .  }
 105  .  .  .  Body: *ast.BlockStmt {
 106  .  .  .  .  Lbrace: 4:76
 107  .  .  .  .  List: []ast.Stmt (len = 3) {
 108  .  .  .  .  .  0: *ast.AssignStmt {
 109  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
 110  .  .  .  .  .  .  .  0: *ast.Ident {
 111  .  .  .  .  .  .  .  .  NamePos: 5:2
 112  .  .  .  .  .  .  .  .  Name: "result"
 113  .  .  .  .  .  .  .  .  Obj: *ast.Object {
 114  .  .  .  .  .  .  .  .  .  Kind: var
 115  .  .  .  .  .  .  .  .  .  Name: "result"
 116  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 108)
 117  .  .  .  .  .  .  .  .  }
 118  .  .  .  .  .  .  .  }
 119  .  .  .  .  .  .  }
 120  .  .  .  .  .  .  TokPos: 5:9
 121  .  .  .  .  .  .  Tok: :=
 122  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
 123  .  .  .  .  .  .  .  0: *ast.CallExpr {
 124  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
 125  .  .  .  .  .  .  .  .  .  NamePos: 5:12
 126  .  .  .  .  .  .  .  .  .  Name: "make"
 127  .  .  .  .  .  .  .  .  }
 128  .  .  .  .  .  .  .  .  Lparen: 5:16
 129  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
 130  .  .  .  .  .  .  .  .  .  0: *ast.ArrayType {
 131  .  .  .  .  .  .  .  .  .  .  Lbrack: 5:17
 132  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
 133  .  .  .  .  .  .  .  .  .  .  .  NamePos: 5:19
 134  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
 135  .  .  .  .  .  .  .  .  .  .  }
 136  .  .  .  .  .  .  .  .  .  }
 137  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {
 138  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
 139  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
 140  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 5:24
 141  .  .  .  .  .  .  .  .  .  .  .  .  Name: "sequence"
 142  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 71)
 143  .  .  .  .  .  .  .  .  .  .  .  }
 144  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
 145  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 5:33
 146  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Length"
 147  .  .  .  .  .  .  .  .  .  .  .  }
 148  .  .  .  .  .  .  .  .  .  .  }
 149  .  .  .  .  .  .  .  .  .  .  Lparen: 5:39
 150  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
 151  .  .  .  .  .  .  .  .  .  .  Rparen: 5:40
 152  .  .  .  .  .  .  .  .  .  }
 153  .  .  .  .  .  .  .  .  }
 154  .  .  .  .  .  .  .  .  Ellipsis: -
 155  .  .  .  .  .  .  .  .  Rparen: 5:41
 156  .  .  .  .  .  .  .  }
 157  .  .  .  .  .  .  }
 158  .  .  .  .  .  }
 159  .  .  .  .  .  1: *ast.RangeStmt {
 160  .  .  .  .  .  .  For: 6:2
 161  .  .  .  .  .  .  Key: *ast.Ident {
 162  .  .  .  .  .  .  .  NamePos: 6:6
 163  .  .  .  .  .  .  .  Name: "i"
 164  .  .  .  .  .  .  .  Obj: *ast.Object {
 165  .  .  .  .  .  .  .  .  Kind: var
 166  .  .  .  .  .  .  .  .  Name: "i"
 167  .  .  .  .  .  .  .  .  Decl: *ast.AssignStmt {
 168  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
 169  .  .  .  .  .  .  .  .  .  .  0: *(obj @ 161)
 170  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
 171  .  .  .  .  .  .  .  .  .  .  .  NamePos: 6:9
 172  .  .  .  .  .  .  .  .  .  .  .  Name: "item"
 173  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
 174  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
 175  .  .  .  .  .  .  .  .  .  .  .  .  Name: "item"
 176  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 167)
 177  .  .  .  .  .  .  .  .  .  .  .  }
 178  .  .  .  .  .  .  .  .  .  .  }
 179  .  .  .  .  .  .  .  .  .  }
 180  .  .  .  .  .  .  .  .  .  TokPos: 6:14
 181  .  .  .  .  .  .  .  .  .  Tok: :=
 182  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
 183  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
 184  .  .  .  .  .  .  .  .  .  .  .  OpPos: 6:17
 185  .  .  .  .  .  .  .  .  .  .  .  Op: range
 186  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
 187  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 6:23
 188  .  .  .  .  .  .  .  .  .  .  .  .  Name: "sequence"
 189  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 71)
 190  .  .  .  .  .  .  .  .  .  .  .  }
 191  .  .  .  .  .  .  .  .  .  .  }
 192  .  .  .  .  .  .  .  .  .  }
 193  .  .  .  .  .  .  .  .  }
 194  .  .  .  .  .  .  .  }
 195  .  .  .  .  .  .  }
 196  .  .  .  .  .  .  Value: *(obj @ 170)
 197  .  .  .  .  .  .  TokPos: 6:14
 198  .  .  .  .  .  .  Tok: :=
 199  .  .  .  .  .  .  X: *(obj @ 186)
 200  .  .  .  .  .  .  Body: *ast.BlockStmt {
 201  .  .  .  .  .  .  .  Lbrace: 6:32
 202  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
 203  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
 204  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
 205  .  .  .  .  .  .  .  .  .  .  0: *ast.IndexExpr {
 206  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
 207  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 7:3
 208  .  .  .  .  .  .  .  .  .  .  .  .  Name: "result"
 209  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 113)
 210  .  .  .  .  .  .  .  .  .  .  .  }
 211  .  .  .  .  .  .  .  .  .  .  .  Lbrack: 7:9
 212  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {
 213  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 7:10
 214  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
 215  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 164)
 216  .  .  .  .  .  .  .  .  .  .  .  }
 217  .  .  .  .  .  .  .  .  .  .  .  Rbrack: 7:11
 218  .  .  .  .  .  .  .  .  .  .  }
 219  .  .  .  .  .  .  .  .  .  }
 220  .  .  .  .  .  .  .  .  .  TokPos: 7:13
 221  .  .  .  .  .  .  .  .  .  Tok: =
 222  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
 223  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
 224  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
 225  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 7:15
 226  .  .  .  .  .  .  .  .  .  .  .  .  Name: "handler"
 227  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 27)
 228  .  .  .  .  .  .  .  .  .  .  .  }
 229  .  .  .  .  .  .  .  .  .  .  .  Lparen: 7:22
 230  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
 231  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
 232  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 7:23
 233  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "item"
 234  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 173)
 235  .  .  .  .  .  .  .  .  .  .  .  .  }
 236  .  .  .  .  .  .  .  .  .  .  .  }
 237  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
 238  .  .  .  .  .  .  .  .  .  .  .  Rparen: 7:27
 239  .  .  .  .  .  .  .  .  .  .  }
 240  .  .  .  .  .  .  .  .  .  }
 241  .  .  .  .  .  .  .  .  }
 242  .  .  .  .  .  .  .  }
 243  .  .  .  .  .  .  .  Rbrace: 8:2
 244  .  .  .  .  .  .  }
 245  .  .  .  .  .  }
 246  .  .  .  .  .  2: *ast.ReturnStmt {
 247  .  .  .  .  .  .  Return: 10:2
 248  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
 249  .  .  .  .  .  .  .  0: *ast.Ident {
 250  .  .  .  .  .  .  .  .  NamePos: 10:9
 251  .  .  .  .  .  .  .  .  Name: "result"
 252  .  .  .  .  .  .  .  .  Obj: *(obj @ 113)
 253  .  .  .  .  .  .  .  }
 254  .  .  .  .  .  .  }
 255  .  .  .  .  .  }
 256  .  .  .  .  }
 257  .  .  .  .  Rbrace: 11:1
 258  .  .  .  }
 259  .  .  }
 260  .  .  1: *ast.FuncDecl {
 261  .  .  .  Name: *ast.Ident {
 262  .  .  .  .  NamePos: 13:6
 263  .  .  .  .  Name: "Double"
 264  .  .  .  .  Obj: *ast.Object {
 265  .  .  .  .  .  Kind: func
 266  .  .  .  .  .  Name: "Double"
 267  .  .  .  .  .  Decl: *(obj @ 260)
 268  .  .  .  .  }
 269  .  .  .  }
 270  .  .  .  Type: *ast.FuncType {
 271  .  .  .  .  Func: 13:1
 272  .  .  .  .  Params: *ast.FieldList {
 273  .  .  .  .  .  Opening: 13:12
 274  .  .  .  .  .  List: []*ast.Field (len = 1) {
 275  .  .  .  .  .  .  0: *ast.Field {
 276  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
 277  .  .  .  .  .  .  .  .  0: *ast.Ident {
 278  .  .  .  .  .  .  .  .  .  NamePos: 13:13
 279  .  .  .  .  .  .  .  .  .  Name: "number"
 280  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
 281  .  .  .  .  .  .  .  .  .  .  Kind: var
 282  .  .  .  .  .  .  .  .  .  .  Name: "number"
 283  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 275)
 284  .  .  .  .  .  .  .  .  .  }
 285  .  .  .  .  .  .  .  .  }
 286  .  .  .  .  .  .  .  }
 287  .  .  .  .  .  .  .  Type: *ast.Ident {
 288  .  .  .  .  .  .  .  .  NamePos: 13:20
 289  .  .  .  .  .  .  .  .  Name: "int"
 290  .  .  .  .  .  .  .  }
 291  .  .  .  .  .  .  }
 292  .  .  .  .  .  }
 293  .  .  .  .  .  Closing: 13:23
 294  .  .  .  .  }
 295  .  .  .  .  Results: *ast.FieldList {
 296  .  .  .  .  .  Opening: -
 297  .  .  .  .  .  List: []*ast.Field (len = 1) {
 298  .  .  .  .  .  .  0: *ast.Field {
 299  .  .  .  .  .  .  .  Type: *ast.Ident {
 300  .  .  .  .  .  .  .  .  NamePos: 13:25
 301  .  .  .  .  .  .  .  .  Name: "int"
 302  .  .  .  .  .  .  .  }
 303  .  .  .  .  .  .  }
 304  .  .  .  .  .  }
 305  .  .  .  .  .  Closing: -
 306  .  .  .  .  }
 307  .  .  .  }
 308  .  .  .  Body: *ast.BlockStmt {
 309  .  .  .  .  Lbrace: 13:29
 310  .  .  .  .  List: []ast.Stmt (len = 1) {
 311  .  .  .  .  .  0: *ast.ReturnStmt {
 312  .  .  .  .  .  .  Return: 14:2
 313  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
 314  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
 315  .  .  .  .  .  .  .  .  X: *ast.Ident {
 316  .  .  .  .  .  .  .  .  .  NamePos: 14:9
 317  .  .  .  .  .  .  .  .  .  Name: "number"
 318  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 280)
 319  .  .  .  .  .  .  .  .  }
 320  .  .  .  .  .  .  .  .  OpPos: 14:16
 321  .  .  .  .  .  .  .  .  Op: *
 322  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
 323  .  .  .  .  .  .  .  .  .  ValuePos: 14:18
 324  .  .  .  .  .  .  .  .  .  Kind: INT
 325  .  .  .  .  .  .  .  .  .  Value: "2"
 326  .  .  .  .  .  .  .  .  }
 327  .  .  .  .  .  .  .  }
 328  .  .  .  .  .  .  }
 329  .  .  .  .  .  }
 330  .  .  .  .  }
 331  .  .  .  .  Rbrace: 15:1
 332  .  .  .  }
 333  .  .  }
 334  .  .  2: *ast.GenDecl {
 335  .  .  .  TokPos: 17:1
 336  .  .  .  Tok: type
 337  .  .  .  Lparen: -
 338  .  .  .  Specs: []ast.Spec (len = 1) {
 339  .  .  .  .  0: *ast.TypeSpec {
 340  .  .  .  .  .  Name: *ast.Ident {
 341  .  .  .  .  .  .  NamePos: 17:6
 342  .  .  .  .  .  .  Name: "A"
 343  .  .  .  .  .  .  Obj: *ast.Object {
 344  .  .  .  .  .  .  .  Kind: type
 345  .  .  .  .  .  .  .  Name: "A"
 346  .  .  .  .  .  .  .  Decl: *(obj @ 339)
 347  .  .  .  .  .  .  }
 348  .  .  .  .  .  }
 349  .  .  .  .  .  Type: *ast.StructType {
 350  .  .  .  .  .  .  Struct: 17:8
 351  .  .  .  .  .  .  Fields: *ast.FieldList {
 352  .  .  .  .  .  .  .  Opening: 17:15
 353  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
 354  .  .  .  .  .  .  .  .  0: *ast.Field {
 355  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
 356  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
 357  .  .  .  .  .  .  .  .  .  .  .  NamePos: 18:2
 358  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
 359  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
 360  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
 361  .  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
 362  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 354)
 363  .  .  .  .  .  .  .  .  .  .  .  }
 364  .  .  .  .  .  .  .  .  .  .  }
 365  .  .  .  .  .  .  .  .  .  }
 366  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
 367  .  .  .  .  .  .  .  .  .  .  NamePos: 18:4
 368  .  .  .  .  .  .  .  .  .  .  Name: "int"
 369  .  .  .  .  .  .  .  .  .  }
 370  .  .  .  .  .  .  .  .  }
 371  .  .  .  .  .  .  .  }
 372  .  .  .  .  .  .  .  Closing: 19:1
 373  .  .  .  .  .  .  }
 374  .  .  .  .  .  .  Incomplete: false
 375  .  .  .  .  .  }
 376  .  .  .  .  }
 377  .  .  .  }
 378  .  .  .  Rparen: -
 379  .  .  }
 380  .  .  3: *ast.FuncDecl {
 381  .  .  .  Name: *ast.Ident {
 382  .  .  .  .  NamePos: 22:6
 383  .  .  .  .  Name: "main"
 384  .  .  .  .  Obj: *ast.Object {
 385  .  .  .  .  .  Kind: func
 386  .  .  .  .  .  Name: "main"
 387  .  .  .  .  .  Decl: *(obj @ 380)
 388  .  .  .  .  }
 389  .  .  .  }
 390  .  .  .  Type: *ast.FuncType {
 391  .  .  .  .  Func: 22:1
 392  .  .  .  .  Params: *ast.FieldList {
 393  .  .  .  .  .  Opening: 22:10
 394  .  .  .  .  .  Closing: 22:11
 395  .  .  .  .  }
 396  .  .  .  }
 397  .  .  .  Body: *ast.BlockStmt {
 398  .  .  .  .  Lbrace: 22:13
 399  .  .  .  .  List: []ast.Stmt (len = 1) {
 400  .  .  .  .  .  0: *ast.ExprStmt {
 401  .  .  .  .  .  .  X: *ast.CallExpr {
 402  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
 403  .  .  .  .  .  .  .  .  X: *ast.Ident {
 404  .  .  .  .  .  .  .  .  .  NamePos: 23:2
 405  .  .  .  .  .  .  .  .  .  Name: "fmt"
 406  .  .  .  .  .  .  .  .  }
 407  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
 408  .  .  .  .  .  .  .  .  .  NamePos: 23:6
 409  .  .  .  .  .  .  .  .  .  Name: "Printf"
 410  .  .  .  .  .  .  .  .  }
 411  .  .  .  .  .  .  .  }
 412  .  .  .  .  .  .  .  Lparen: 23:12
 413  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
 414  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
 415  .  .  .  .  .  .  .  .  .  ValuePos: 23:13
 416  .  .  .  .  .  .  .  .  .  Kind: STRING
 417  .  .  .  .  .  .  .  .  .  Value: "\"%s\\n\""
 418  .  .  .  .  .  .  .  .  }
 419  .  .  .  .  .  .  .  .  1: *ast.CallExpr {
 420  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
 421  .  .  .  .  .  .  .  .  .  .  NamePos: 23:21
 422  .  .  .  .  .  .  .  .  .  .  Name: "MapIntIntSequenceSlice"
 423  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 11)
 424  .  .  .  .  .  .  .  .  .  }
 425  .  .  .  .  .  .  .  .  .  Lparen: 23:43
 426  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
 427  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
 428  .  .  .  .  .  .  .  .  .  .  .  NamePos: 23:44
 429  .  .  .  .  .  .  .  .  .  .  .  Name: "Double"
 430  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 264)
 431  .  .  .  .  .  .  .  .  .  .  }
 432  .  .  .  .  .  .  .  .  .  .  1: *ast.CompositeLit {
 433  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
 434  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: 23:52
 435  .  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
 436  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 23:54
 437  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
 438  .  .  .  .  .  .  .  .  .  .  .  .  }
 439  .  .  .  .  .  .  .  .  .  .  .  }
 440  .  .  .  .  .  .  .  .  .  .  .  Lbrace: 23:57
 441  .  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
 442  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
 443  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 23:58
 444  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
 445  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "2"
 446  .  .  .  .  .  .  .  .  .  .  .  .  }
 447  .  .  .  .  .  .  .  .  .  .  .  }
 448  .  .  .  .  .  .  .  .  .  .  .  Rbrace: 23:59
 449  .  .  .  .  .  .  .  .  .  .  }
 450  .  .  .  .  .  .  .  .  .  }
 451  .  .  .  .  .  .  .  .  .  Ellipsis: -
 452  .  .  .  .  .  .  .  .  .  Rparen: 23:60
 453  .  .  .  .  .  .  .  .  }
 454  .  .  .  .  .  .  .  }
 455  .  .  .  .  .  .  .  Ellipsis: -
 456  .  .  .  .  .  .  .  Rparen: 23:61
 457  .  .  .  .  .  .  }
 458  .  .  .  .  .  }
 459  .  .  .  .  }
 460  .  .  .  .  Rbrace: 24:1
 461  .  .  .  }
 462  .  .  }
 463  .  }
 464  .  Scope: *ast.Scope {
 465  .  .  Objects: map[string]*ast.Object (len = 4) {
 466  .  .  .  "MapIntIntSequenceSlice": *(obj @ 11)
 467  .  .  .  "Double": *(obj @ 264)
 468  .  .  .  "A": *(obj @ 343)
 469  .  .  .  "main": *(obj @ 384)
 470  .  .  }
 471  .  }
 472  .  Unresolved: []*ast.Ident (len = 11) {
 473  .  .  0: *(obj @ 42)
 474  .  .  1: *(obj @ 54)
 475  .  .  2: *(obj @ 80)
 476  .  .  3: *(obj @ 95)
 477  .  .  4: *(obj @ 124)
 478  .  .  5: *(obj @ 132)
 479  .  .  6: *(obj @ 287)
 480  .  .  7: *(obj @ 299)
 481  .  .  8: *(obj @ 366)
 482  .  .  9: *(obj @ 403)
 483  .  .  10: *(obj @ 435)
 484  .  }
 485  }
